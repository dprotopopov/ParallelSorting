nvcc oddeven.cu
nvcc bitinic.cu
nvcc bucket.cu
mpicc -o oddeven.bin ./oddeven.c
mpicc -o bitonic.bin ./bitonic.c
mpicc -o bucket.bin ./bucket.c
mpirun -np 5 ./oddeven.bin 1000
mpirun -np 5 ./bitonic.bin 1000
mpirun -np 5 ./bucket.bin 1000

D:\Projects\ParallelSorting\cudasort>nvcc.exe bitonic.cu
   Создается библиотека a.lib и объект a.exp

D:\Projects\ParallelSorting\cudasort>a.exe
bitonic sort
Running on GPU 0 (GeForce GTX 650)
array size = 10000      avg time = 0.1  check result = ok       4,8,10,19,22,26,27,33,35,39,43,44,44,48,48,51,54,55,56,57,57,59,61,63, ...
array size = 20000      avg time = 0.166667     check result = ok       5,8,8,9,11,11,16,20,22,27,29,40,41,42,52,53,54,55,57,59,60,64,65,66, ...
array size = 30000      avg time = 0.25 check result = ok       0,0,0,1,1,4,6,7,8,9,9,11,11,12,12,14,18,18,19,20,21,21,22,22, ...
array size = 40000      avg time = 0.333333     check result = ok       1,2,6,6,7,7,9,9,10,14,14,15,15,18,18,18,19,19,20,20,21,21,21,24, ...
array size = 50000      avg time = 0.5  check result = ok       0,1,1,3,3,4,6,7,8,8,8,8,10,10,11,12,13,13,14,14,14,15,15,16, ...
array size = 60000      avg time = 0.5  check result = ok       0,0,0,1,1,1,1,2,2,2,3,3,4,4,5,6,6,7,7,7,7,8,8,8, ...
array size = 70000      avg time = 1    check result = ok       0,2,2,2,3,3,3,4,5,6,7,7,7,7,8,8,9,9,9,9,10,10,11,11, ...
array size = 80000      avg time = 0.5  check result = ok       0,0,0,0,1,3,3,3,3,4,4,5,5,5,5,6,6,6,7,7,7,7,8,8, ...
array size = 90000      avg time = 1    check result = ok       0,0,1,1,1,1,1,2,2,2,3,3,4,4,4,4,4,5,5,6,6,6,7,7, ...
array size = 100000     avg time = 2    check result = ok       0,0,1,1,1,2,2,2,3,3,4,4,4,5,5,6,6,7,7,7,8,8,8,9, ...

D:\Projects\ParallelSorting\cudasort>nvcc.exe oddeven.cu
   Создается библиотека a.lib и объект a.exp

D:\Projects\ParallelSorting\cudasort>a.exe
odd-even sort
Running on GPU 0 (GeForce GTX 650)
array size = 1000       avg time = 0.01 check result = ok       22,57,63,79,109,112,113,127,158,198,226,257,304,320,321,348,449,461,563,614,664,669,686,709, ...
array size = 2000       avg time = 0    check result = ok       27,59,65,70,77,82,103,103,110,110,162,180,188,190,197,203,211,215,243,253,292,301,324,329, ...
array size = 3000       avg time = 0.0384615    check result = ok       1,25,39,41,52,54,65,66,66,68,69,85,125,139,146,162,166,177,192,193,197,239,243,252, ...
array size = 4000       avg time = 0    check result = ok       0,7,22,25,26,29,30,38,42,47,58,64,65,65,79,87,115,121,124,128,128,133,138,153, ...
array size = 5000       avg time = 0    check result = ok       14,16,24,50,61,62,63,76,79,80,83,86,90,99,99,101,102,119,123,133,137,143,146,147, ...
array size = 6000       avg time = 0    check result = ok       2,13,16,17,18,18,19,21,21,25,25,27,35,42,44,48,48,49,54,57,65,73,75,89, ...
array size = 7000       avg time = 0    check result = ok       14,38,51,53,69,75,82,92,96,99,102,102,116,117,131,143,150,152,170,174,174,176,184,185, ...
array size = 8000       avg time = 0    check result = ok       6,10,18,18,21,24,31,33,35,39,42,44,45,45,52,52,55,58,59,62,66,70,71,76, ...
array size = 9000       avg time = 0    check result = ok       1,14,15,15,27,31,34,36,37,38,43,44,45,51,58,61,64,67,69,70,71,72,72,74, ...
array size = 10000      avg time = 0    check result = ok       1,5,7,8,18,21,23,30,33,34,36,37,38,42,44,51,61,68,70,71,73,75,75,81, ...

D:\Projects\ParallelSorting\cudasort>nvcc.exe bucket.cu
   Создается библиотека a.lib и объект a.exp

D:\Projects\ParallelSorting\cudasort>a.exe
bucket sort
Running on GPU 0 (GeForce GTX 650)
array size = 100        avg time = 0.01 check result = ok       45,162,640,954,1030,1106,1215,1425,1546,1626,1882,2050,2519,2594,2807,3092,3106,3162,3461,3465,3524,3636,3817,4920, ...
array size = 200        avg time = 0    check result = ok       127,573,607,1014,1121,1126,1218,1529,2316,2624,2646,2665,2794,2982,3080,3195,4163,4202,4937,5137,5169,5516,5669,5765, ...
array size = 300        avg time = 0.025        check result = ok       50,95,226,241,342,361,461,494,564,601,699,790,1079,1446,1550,1560,1584,1620,1770,1944,2110,2277,2309,2337, ...
array size = 400        avg time = 0    check result = ok       47,304,342,490,517,565,854,870,972,976,1109,1208,1345,1459,1468,1474,1480,1534,1544,1630,1633,1722,1778,1911, ...
array size = 500        avg time = 0.04 check result = ok       33,109,118,381,411,479,627,796,990,1011,1139,1387,1439,1465,1505,1573,1657,1691,1763,1802,1822,1949,1967,2030, ...
array size = 600        avg time = 0.0454545    check result = ok       38,46,100,170,237,315,367,432,446,515,688,782,788,831,852,910,1025,1038,1150,1236,1287,1450,1498,1538, ...
array size = 700        avg time = 0.0952381    check result = ok       16,142,168,173,206,256,277,286,402,429,499,588,596,629,718,778,884,952,1055,1058,1064,1224,1318,1363, ...
array size = 800        avg time = 0.1  check result = ok       63,98,116,134,134,230,288,292,322,333,358,359,419,441,457,466,480,546,612,690,707,778,780,862, ...
array size = 900        avg time = 0.1  check result = ok       8,41,61,174,194,198,198,204,236,256,261,263,282,284,356,358,406,420,424,466,476,549,558,587, ...
array size = 1000       avg time = 0.15 check result = ok       15,25,105,144,164,214,235,274,283,289,334,339,348,350,368,375,398,429,468,527,538,541,555,567, ...

mpi@ubuntu:~/mpisort$ mpicc -o bitonic.bin ./bitonic.c
mpi@ubuntu:~/mpisort$ mpirun -np 5 ./bitonic.bin 1000
Title :	bitonic sort
Description :	Битоническая сортировка (bitonic sort)
Number of processes :	5
Array size :	1000
Check :	ok
2416949,6072641,6939507,7684930,8936987,10901063,11614769,11671338,12260289,12895151,14989683,19485054,29777560,31308902,34740865,35005211,35756851,37487770,40610537,42999170,...

mpi@ubuntu:~/mpisort$ mpicc -o bucket.bin ./bucket.c
mpi@ubuntu:~/mpisort$ mpirun -np 5 ./bucket.bin 1000
Title :	bucket sort
Description :	Блочная сортировка (bucket sort)
Number of processes :	5
Array size :	1000
Indexator :	27 5
Number of buckets per process :	7
Array size :	1000
Check :	ok
2416949,6072641,6939507,7684930,8936987,10901063,11614769,11671338,12260289,12895151,14989683,19485054,29777560,31308902,34740865,35005211,35756851,37487770,40610537,42999170,...

mpi@ubuntu:~/mpisort$ mpicc -o oddeven.bin ./oddeven.c
mpi@ubuntu:~/mpisort$ mpirun -np 5 ./oddeven.bin 1000
Title :	odd-even sort
Description :	���������� �����-��������� �������������� (odd-even sort)
Number of processes :	5
Array size :	1000
Check :	ok
2416949,6072641,6939507,7684930,8936987,10901063,11614769,11671338,12260289,12895151,14989683,19485054,29777560,31308902,34740865,35005211,35756851,37487770,40610537,42999170,...
